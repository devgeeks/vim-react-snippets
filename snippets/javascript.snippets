snippet index
	import ${1:ComponentName} from './$1';
	export default $1;
snippet cs
	const cx = classNames({
		${1:classname}: ${2:true}
	});
snippet cdm
	componentDidMount() {
		${1}
	},
snippet cdup
	componentDidUpdate(prevProps, prevState) {
		${1}
	},
snippet cnt
	import React from 'react';
	import { connect } from 'react-redux';

	const ${1:ContainerName} = React.createClass({

		displayName: '$1',

		propTypes: {
			history: React.PropTypes.object
		},

		render() {
			return (
				${0:<div />}
			);
		},
	});

	function mapStateToProps(state) {
		return { ...state };
	},

	export default connect(mapStateToProps)($1);
snippet cwm
	componentWillMount() {
		${1}
	},
snippet cwr
	componentWillReceiveProps(nextProps) {
		${1}
	},
snippet cwun
	componentWillUnmount() {
		${1}
	},
snippet cwu
	componentWillUpdate(nextProps, nextState) {
		${1}
	},
snippet cx
	cx({
		${1}: ${2}
	});
snippet fup
	forceUpdate(${1:callback});
snippet gdp
	getDefaultProps() {
		return {
			${1}
		};
	},
snippet gis
	getInitialState() {
		return {
			${1}: ${2}
		};
	},
snippet ism
	isMounted()
snippet jsx
	/**
	 * @jsx React.DOM
	 */
snippet pt
	propTypes: {
		${1}: React.PropTypes.${2:string}
	},
snippet rcc
	import React from 'react';
	//import classNames from 'classnames';

	//import './index.less';

	export default React.createClass({

		displayName: '${1:ComponentName}',

		render() {
			return (
				${2:<div />}
			);
		},
	});
snippet ren
	render() {
		return (
			${1:<div />}
		);
	},
snippet sst
	setState({
		${1}: ${2}
	});
snippet scu
	shouldComponentUpdate(nextProps, nextState) {
		${1}
	},
snippet props
	this.props.${1}
snippet state
	this.state.${1}
snippet trp
	transferPropsTo(${1});
